[{"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\index.js":"1","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\App.js":"2","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\Expenses.js":"3","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpenseItem.js":"4","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\UI\\Card.js":"5","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpenseDate.js":"6","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\NewExpense\\NewExpense.js":"7","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\NewExpense\\ExpenseForm.js":"8","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesFilter.js":"9","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesList.js":"10","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesChart.js":"11","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Chart\\Chart.js":"12","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Chart\\ChartBar.js":"13"},{"size":148,"mtime":1633187493076,"results":"14","hashOfConfig":"15"},{"size":1094,"mtime":1634822554946,"results":"16","hashOfConfig":"15"},{"size":954,"mtime":1634843624432,"results":"17","hashOfConfig":"15"},{"size":581,"mtime":1634824567475,"results":"18","hashOfConfig":"15"},{"size":220,"mtime":1634823238813,"results":"19","hashOfConfig":"15"},{"size":587,"mtime":1634821791445,"results":"20","hashOfConfig":"15"},{"size":955,"mtime":1634829668637,"results":"21","hashOfConfig":"15"},{"size":2786,"mtime":1634843883557,"results":"22","hashOfConfig":"15"},{"size":785,"mtime":1634821751625,"results":"23","hashOfConfig":"15"},{"size":557,"mtime":1634824420962,"results":"24","hashOfConfig":"15"},{"size":852,"mtime":1634843710384,"results":"25","hashOfConfig":"15"},{"size":553,"mtime":1634843579671,"results":"26","hashOfConfig":"15"},{"size":574,"mtime":1634843745375,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2ioc1o",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\index.js",[],["59","60"],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\App.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\Expenses.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\UI\\Card.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\NewExpense\\NewExpense.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\NewExpense\\ExpenseForm.js",["61"],"import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n    // const [userInput, setUserInput] = useState({\r\n    //   enteredTitle: '',\r\n    //   enteredAmount: '',\r\n    //   enteredDate: '',\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredTitle: event.target.value,\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //   return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredAmount: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredDate: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"click\" onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesFilter.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesList.js",[],"C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Expenses\\ExpensesChart.js",["62"],"import react from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Chart\\Chart.js",["63"],"import react from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\jonas\\Desktop\\GitHub\\Repositories\\react-complete-guide\\src\\components\\Chart\\ChartBar.js",["64"],"import react from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default ChartBar;\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]